{
  "name": "modularis",
  "description": "Boilerplate project for modular web apps",
  "keywords": [
    "modularis",
    "css",
    "sass"
  ],
  "style": "scss/index.scss",
  "sass": "scss/index.scss",
  "version": "0.0.1",
  "author": "Markus Oberlehner",
  "homepage": "https://github.com/modularis/modularis",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/modularis/modularis"
  },
  "bugs": {
    "url": "https://github.com/modularis/modularis/issues"
  },
  "dependencies": {
    "handlebars": "^4.0.5",
    "set-dom": "^1.2.1",
    "xhr": "^2.2.2"
  },
  "devDependencies": {
    "autoprefixer": "^6.4.0",
    "backstopjs": "^1.3.5",
    "browser-sync": "^2.14.0",
    "chai": "^3.5.0",
    "chokidar-cli": "^1.2.0",
    "clean-css": "^3.4.19",
    "eslint": "^3.2.2",
    "eslint-config-modularis": "^0.1.0",
    "eslint-plugin-import": "^1.12.0",
    "express": "^4.14.0",
    "express-handlebars": "^3.0.0",
    "htmllint-cli": "0.0.5",
    "mocha": "^3.0.1",
    "node-sass": "^3.8.0",
    "node-sass-magic-importer": "^0.1.4",
    "parallelshell": "^2.0.0",
    "postcss-cli": "^2.5.2",
    "pre-git": "^3.10.0",
    "rollup": "^0.34.3",
    "rollup-plugin-buble": "^0.12.1",
    "rollup-plugin-commonjs": "^3.3.1",
    "rollup-plugin-node-resolve": "^2.0.0",
    "sitespeed.io": "^3.11.7",
    "stylelint": "^7.1.0",
    "stylelint-config-modularis": "0.0.1",
    "uglify-js": "^2.7.0",
    "zombie": "^4.2.1"
  },
  "scripts": {
    "serve": "cd app && node app.js",
    "browser-sync": "browser-sync start --proxy localhost:2999 --files app/public",
    "styles:sass": "node-sass --source-map-embed --source-map-root / --importer node_modules/node-sass-magic-importer --output app/public/css resources/scss/index.scss",
    "styles:postcss": "postcss --use autoprefixer --replace app/public/css/index.css",
    "styles:minify": "rm app/public/css/*.min.css; for f in app/public/css/*.css; do base=${f%.css}; cleancss --output $base.min.css $f; done",
    "styles:lint": "stylelint resources/scss/**/*.scss --syntax scss",
    "styles:lint-no-error": "stylelint resources/scss/**/*.scss --syntax scss || exit 0",
    "styles": "parallelshell 'npm run styles:sass && npm run styles:postcss && npm run styles:minify' 'npm run styles:lint-no-error'",
    "scripts:bundle:global": "rollup --config --sourcemap inline --format iife --output app/public/js/global.js resources/js/app/global.js",
    "scripts:bundle:controller": "for f in resources/js/controller/*.js; do filename=$(basename \"$f\"); rollup --config --sourcemap inline --format iife --output app/public/js/$filename $f; done",
    "scripts:bundle:service-worker": "rollup --config --format iife --output app/public/service-worker.js resources/js/app/service-worker.js",
    "scripts:bundle": "parallelshell 'npm run scripts:bundle:global' 'npm run scripts:bundle:controller' 'npm run scripts:bundle:service-worker'",
    "scripts:minify": "rm app/public/js/*.min.js; for f in app/public/js/*.js; do base=${f%.js}; uglifyjs --compress --output $base.min.js $f; done",
    "scripts:lint": "eslint 'resources/**/*.js'",
    "scripts:lint-no-error": "eslint 'resources/**/*.js' || exit 0",
    "scripts": "parallelshell 'npm run scripts:bundle && npm run scripts:minify' 'npm run scripts:lint-no-error'",
    "html:lint": "htmllint resources/**/*.hbs",
    "html:lint-no-error": "htmllint resources/**/*.hbs || exit 0",
    "html": "npm run html:lint-no-error",
    "watch:styles": "chokidar resources/**/*.scss -c 'npm run styles'",
    "watch:scripts": "chokidar resources/**/*.js -c 'npm run scripts'",
    "watch": "parallelshell 'npm run serve' 'npm run browser-sync' 'npm run watch:styles' 'npm run watch:scripts'",
    "test:styles:reference": "cd node_modules/backstopjs && npm run reference",
    "test:styles": "cd node_modules/backstopjs && npm run test",
    "test:scripts": "mocha test/unit.js",
    "test:browser": "mocha test/browser.js --timeout 60000",
    "test:performance": "sitespeed.io -u http://localhost:2999",
    "test": "npm run test:styles && npm run test:scripts && npm run test:browser"
  },
  "configDisabled": {
    "pre-git": {
      "pre-commit": [
        "npm run styles:lint",
        "npm run scripts:lint",
        "npm run html:lint"
      ],
      "pre-push": [
        "npm test"
      ]
    }
  },
  "config": {
    "pre-git": {
      "pre-commit": [],
      "pre-push": [],
      "post-commit": [],
      "post-checkout": [],
      "post-merge": []
    }
  }
}
